; Any settings marked OPTIONAL may be safely left out of the settings.

; General InvenSys settings
[general]


; Database connection settings: REQUIRED
[database]
; Database type: REQUIRED
; Possible options:
;   mysql - MySQL (default)
;   odbc  - Open Database Connectivity (Microsoft SQL, etc.)
;   psql  - Postgre SQL
;   sqlite2 - SQLite version 2
;   sqlite  - SQLite version 3 - much better than sqlite2
type = mysql
; DB Host: REQUIRED FOR MYSQL, ODBC, PSQL
; Can be either an IP address or a hostname, as long as the value can
; be resolved by the default DNS server on this system.
; Using "localhost" (default) will resolve properly.
host = localhost
; DB Port: REQUIRED FOR MYSQL, ODBC, PSQL
; The port number on which the db server is listening for connections.
; Default port numbers for server SQL databases are:
;   mysql: 3306
;   odbc:  1433 (Microsoft SQL Server 2016)
;   psql:  5432
;   sqlite 2/3: no port - local file only
port = 3306
; DB Name: REQUIRED FOR MYSQL, ODBC, PSQL
; The name of the database within the db server.
name = db
; DB User: REQUIRED FOR MYSQL, ODBC, PSQL
; The username of a database user that has permissions to access the DB.
user = db
; DB Password: REQUIRED FOR MYSQL, ODBC, PSQL
; The password for the DB <user> above.
; TODO: the DB user's password should be stored encrypted
pass = db_password
; DB File: REQUIRED ONLY FOR SQLITE
; The sqlite database file.  Should be an absolute path.
; File ends in .sqlite or .sqlite3, depending on version of SQLite being used.
; Absolute paths should start with / (*nix) or C:\ (Windows)
file = /path/to/db_file.sqlite3


; Tables in the database.
; These are included to allow checking versions and valid databases.
; TODO: Eventually, these will also allow creating the database's table entries.
; If table data is not included here, it can be populated from the database.
; In this example, the table's name is "test", and should always be prepended
; with "table-" for proper parsing of this file.  The table also includes an
; array of fields.
[table-test]
; Size of this array: REQUIRED
; This size should only include the number of fields in this specific table's 
; field list, and exclude all copy_from fields.
size = 2
; Major and Minor Version: OPTIONAL
; Defaults to 1.0
; Useful for ensuring the database is up to date with the application.
version_major = 1
version_minor = 0
; To avoid rewriting the same field types, this can be use to copy fields from
; one table to another (for example, if you have multiple "subclass" tables
; that all share common columns, but have their own unique columns as well).
; Format is a comma-space separated list of
;   [table name]/[field number in this config]
;   OR,
;   [table name]/all to copy all of the fields from another table.
copy_fields = test2/1, test3/all
; Primary Key Field Name: REQUIRED if using a multi-column or constraint PK
;pk_name = pk_ID
; Unique Key Field Name: REQUIRED if using a multi-column or constraint UK
;uk_name = uk_ID

[table-test/1]
; Field Name: REQUIRED
name = id
; Field Type: REQUIRED
; Options are:
;   int
;   double
;   bool
;   date
;   time
;   timestamp - not available currently
;   varchar (short strings, usually < 255 characters)
;   text (long strings)
;   choice (type is varchar, but limited to certain options only)
type = int
; Max Size of Data in bytes/characters or digits for ints: REQUIRED for non-text
max_size = 8
; Allow Null Values?: Currently Unsupported
; Can be either true or false
allow_null = false
; Is this a Key?: Currently Unsupported
; Can be empty for no key or a key type (mysql: PRI, MUL, UNI, FOR)
; TODO: support multiple columns for Primary Key and Unique Key and Foreign Key
;   http://www.w3schools.com/sql/sql_primarykey.asp
;     ... , CONSTRAINT pk_PersonID PRIMARY KEY (P_Id,LastName) );
;   http://www.w3schools.com/sql/sql_unique.asp
;    single
;     ... , UNIQUE (P_Id) );
;    multiple
;     ... , CONSTRAINT uc_PersonID UNIQUE (P_Id,LastName) );
;   http://www.w3schools.com/sql/sql_foreignkey.asp
;    regular
;     ... , FOREIGN KEY (P_Id) REFERENCES Persons(P_Id) );
;    constraint
;     ... , CONSTRAINT fk_PerOrders FOREIGN KEY (P_Id) REFERENCES Persons(P_Id) );
key = PRI
; Foreign Key Reference: REQUIRED if using a foreign key
; Table and Field must be a valid table and field in the Table, respectively.
;fk_ref = Table(Field)
; Foreign Key Constraint Name: REQUIRED if using a constraint FK
;fk_constraint = fk_cname
; Is there a default value for this field?: OPTIONAL
; Can be either null (no default) or a valid value.
default = null
; Choices: OPTIONAL except REQURIED if Type == choice
; For example, a "status" field may have 3 choices:
;   active (Active)
;   decom  (Decommissioned)
;   broken (Broken)
; The lower-case and abbreviated text is stored in the database, the other
; is human-readable for display purposes, the separators must look like this
; example to parse correctly.
; Each choice is separated by a comma-space.
; The db-entry and readable text are separated by space-colon-colon-space.
choices = active :: Active, decom :: Decommissioned, broken :: Broken
